p <- c(.1, .2, .3, .4)
x <- 2 : 5
var(x, p)
pbeta(0.75, 1, 1)
data3 <- aggregate(steps ~ interval, data=data, mean) #
data3 <- aggregate(steps ~ interval, data=data, FUN=mean) #
data <- read.csv("activity.csv" )
data$date <- as.Date(data$date)
data <- read.csv("activity.csv" )
setwd("C:\\Users\\cheri_000\\Documents\\GitHub\\RepData_PeerAssessment1")
data <- read.csv("activity.csv" )
data3 <- aggregate(steps ~ interval, data=data, FUN=mean) #
View(data3)
#dev.off()
input <-subset(read.table("household_power_consumption.txt", sep=";", dec="." , header=T),
as.Date(Date, format="%d/%m/%Y")=="2007-02-01" | as.Date(Date, format="%d/%m/%Y")=="2007-02-02")
# Convert factor to numeric
input$gap <- as.numeric(levels(input$Global_active_power))[input$Global_active_power]
# Convert string to date time
input$dt <- strptime(paste(input$Date, input$Time, sep = " "), format="%d/%m/%Y %H:%M:%S")
# Plotting
#png("plot2.png", width = 480, height = 480)
with(input, plot(dt, gap, type="l", xlab="", ylab="Global Active Power (Kilowatts)"))
#dev.off()
with(data3, plot(interval, mean, type="l", xlab="", ylab="Global Active Power (Kilowatts)"))
with(data3, plot(interval, steps, type="l", xlab="", ylab="Global Active Power (Kilowatts)"))
View(data3)
data4 <- subset(data3, max(data3$steps))
data4 <- subset(data3, max(data3$steps)=TRUE)
data4 <- subset(data3, max(data3$steps)==TRUE)
View(data4)
m <- max(data3$steps)
data4 <- subset(data3, data3$steps==m)
data4$interval
paste0("The maximum number of steps was in 5-minute interval number : ", data4$interval)
View(data)
View(data3)
sum(is.na(data))
View(data3)
r = merge(data, data3, by="interval", suffixes=c(".data", ".data3"))
na.idx = which(is.na(data$steps))
data[na.idx,"steps"] = r[na.idx,"steps.data3"]
View(data)
data <- read.csv("activity.csv" )
View(data)
data5<-data
r = merge(data5, data3, by="interval", suffixes=c(".data5", ".data3"))
na.idx = which(is.na(data5$steps))
data5[na.idx,"steps"] = r[na.idx,"steps.data3"]
View(data5)
View(data)
data52 <- aggregate(steps ~ date, data=data, FUN=sum) #
hist(data52$steps, main=" Total Number Of Steps", xlab= "Steps")
mean51 <- round(mean(data52$steps))
median51 <- median(data52$steps)
paste0("The mean is: ", mean51," and the median is: ", median51  , " steps per day")
data52 <- aggregate(steps ~ date, data=data5, FUN=sum) #
hist(data52$steps, main=" Total Number Of Steps", xlab= "Steps")
mean51 <- round(mean(data52$steps))
median51 <- median(data52$steps)
paste0("The mean is: ", mean51," and the median is: ", median51  , " steps per day")
View(data)
?weekdays
data5$day <- isWeekend(data5$date)
data5$day <- ("weekend", (weekdays(as.Date(date)) %in% c('Saturday','Sunday')))
data5$day <- ("weekend", (weekdays(as.Date(date)) %in% c('Saturday','Sunday'))
if (weekdays(as.Date(data5$date)) %in% c('Saturday','Sunday')) { data5$date <- "weekend" }
View(data5)
if (weekdays(as.Date(data5$date)) %in% c('Saturday','Sunday')) { data5$day <- "weekend" }
View(r)
View(data5)
day <- weekdays(as.Date(data5$date))
data5$day <- weekdays(as.Date(data5$date))
View(data5)
if (data5$day %in% c('Saturday','Sunday')) { data5$dayw <- "weekend" }
if (data5$day =="Saturday" | data5$day == "Sunday") { data5$dayw <- "weekend" }
ifelse(data5$day =="Saturday" | data5$day == "Sunday", "weekend", "weekday" )
data5$day <- ifelse(data5$day =="Saturday" | data5$day == "Sunday", "weekend", "weekday" )
View(data5)
data5<-data
r = merge(data5, data3, by="interval", suffixes=c(".data5", ".data3"))
na.idx = which(is.na(data5$steps))
data5[na.idx,"steps"] = r[na.idx,"steps.data3"]
data5$day <- weekdays(as.Date(data5$date))
data5$dayw <- ifelse(data5$day =="Saturday" | data5$day == "Sunday", "weekend", "weekday" )
View(data5)
tail (data5, dayw)
tail (data5$dayw , 10)
tail (data5 , 10)
require(lattice)
data5 <- transform(data5, dayw = factor(dayw))
xyplot(steps ~ interval | dayw, data = data5, layout = c(1, 2)
)
data5 <- transform(data5, dayw = factor(dayw))
xyplot(steps ~ interval | dayw, data = data5,type="l",  layout = c(1, 2))
data6 <- aggregate(steps ~ day , data=data5, FUN=mean)
View(data6)
data6 <- aggregate(steps ~ date , data=data5, FUN=mean)
View(data6)
data6$day <- weekdays(as.Date(data6$date))
data6$dayw <- ifelse(data6$day =="Saturday" | data6$day == "Sunday", "weekend", "weekday" )
View(data6)
data6 <- transform(data6, dayw = factor(dayw))
xyplot(steps ~ interval | dayw, data = data6,type="l",  layout = c(1, 2))
View(data6)
data6 <- aggregate(steps ~ date*interval , data=data5, FUN=mean)
View(data6)
data6 <- aggregate(steps ~ date+interval , data=data5, FUN=mean)
View(data6)
data6$day <- weekdays(as.Date(data6$date))
data6$dayw <- ifelse(data6$day =="Saturday" | data6$day == "Sunday", "weekend", "weekday" )
View(data6)
data6 <- transform(data6, dayw = factor(dayw))
xyplot(steps ~ interval | dayw, data = data6,type="l",  layout = c(1, 2))
data5$day <- weekdays(as.Date(data5$date))
data5$dayw <- ifelse(data5$day =="Saturday" | data5$day == "Sunday", "weekend", "weekday" )
View(data5)
data6 <- aggregate(steps ~ dayw+interval , data=data5, FUN=mean)
View(data6)
data6 <- transform(data6, dayw = factor(dayw))
xyplot(steps ~ interval | dayw, data = data6,type="l",  layout = c(1, 2))
data6 <- aggregate(steps ~ interval+dayw , data=data5, FUN=mean)
data6 <- transform(data6, dayw = factor(dayw))
xyplot(steps ~ interval | dayw, data = data6,type="l",  layout = c(1, 2))
xyplot(steps ~ interval | dayw, data = data6,type="l", ylab="Number of steps",  layout = c(1, 2))
?knit2html
knit2html("PA1_template.Rmd", "PA1_template.html")
library(knitr)
knit2html("PA1_template.Rmd", "PA1_template.html")
knit2html("PA1_template.Rmd", "PA1_template.html", fig.path="figures")
?knit2html
knit2html("PA1_template.Rmd", "PA1_template.md")
knit2html("PA1_template.Rmd", "PA1_template.html")
knit2html("PA1_template.Rmd", "PA1_template.html")
knit2html("PA1_template.Rmd", "PA1_template.md")
